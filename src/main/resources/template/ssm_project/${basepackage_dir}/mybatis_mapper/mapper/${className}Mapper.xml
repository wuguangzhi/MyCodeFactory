<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<#macro mapperEl value>${r"#{"}${value}}</#macro>
<#macro namespace>${className}.</#macro>

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="${className}Mapper">

	<resultMap id="RM_${className}" type="${basepackage}.pojo.${className}">
        <#list table.columns as column>
        <result property="${column.columnNameLower}" column="${column.sqlName}"/>
		</#list>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="${className}_columns">
	    <![CDATA[
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true"(主键自增)  keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="${table.idColumn.columnNameFirstLower}" parameterType="${basepackage}.pojo.${className}">
    <![CDATA[
        INSERT INTO ${table.sqlName} (
        <#list table.columns as column> ${column.sqlName}<#if column_has_next>,</#if></#list>
        ) VALUES (
        <#list table.columns as column> <@mapperEl column.columnNameFirstLower/><#if column_has_next>,</#if></#list>        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" parameterType="${basepackage}.pojo.${className}">
    <![CDATA[
        UPDATE ${table.sqlName} 
        <set >
	        <#list table.notPkColumns as column>
		         <if test="${column.sqlName} != null" >
		              ${column.sqlName} = <@mapperEl column.columnNameFirstLower/> <#if column_has_next>,</#if>  
	             </if>
	        </#list>
	    </set>
        WHERE 
        	<#list table.compositeIdColumns as column>${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if> </#list>	        
    ]]>
	</update>

    <!--传入id, 测试是否支持主键非id  -->
    <delete id="delete" parameterType="${basepackage}.pojo.${className}">
    <![CDATA[
        DELETE FROM ${table.sqlName} WHERE
        <#list table.compositeIdColumns as column>
        ${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
		</#list>
    ]]>
    </delete>
    
    <!--传入id, 测试是否支持主键非id  -->
    <select id="findById" resultMap="RM_${className}" parameterType="java.lang.Integer" >
		SELECT <include refid="${className}_columns" />
	    <![CDATA[
		    FROM ${table.sqlName} 
	        WHERE 
				<#list table.compositeIdColumns as column>
		        ${column.sqlName} = <@mapperEl 'id'/> <#if column_has_next> AND </#if>
		        </#list>    
	    ]]>
	</select>
	<!--传入id, 测试是否支持主键非id  -->
	 <select id="findAll" resultMap="RM_${className}" parameterType="${basepackage}.pojo.${className}" >
		SELECT <include refid="${className}_columns" />
	    <![CDATA[
		    FROM ${table.sqlName} 
	        WHERE 1=1
	    ]]>
	</select>
</mapper>

